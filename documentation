Дла начала игры необходимо обратиться с помощью JSON на эндпоинт /battles_create
    Сервер принимает два параметра userId, ntfId. Где userId-это id номер первого игрока, ntfId номер второго
    соответственно. Данные принимаються в формате JSON.
    Пример JSON запроса к серверу:                                */ {"userId":"10", "ntfId":"10"} /*
    В момент обращения сервер, выдает паре игроков уникальный токен, создавая оффер игры.
    Токен возвращается в ответе на создание пары в формате ключ-значения(токен-пара)
    Пример JSON ответа сервера: */ {"123f548238e2b8c4b6c57fab4c306d6b": ["userId=10", "ntfId=10"]} /*



Для совершения хода необходимо обратиться на эндпоинт /battles_move
    Сервер принимает на входе три аргумента в формате JSON, уникальный токен партии игра, ход первого игрока,
    ход второго игрока. Для обозначения выбора используется 'stone', 'scissors', 'paper'.
    Пример запроса к серверу
       */ {"token_match":"123f548238e2b8c4b6c57fab4c306d6b", "userId":"stone", "ntfId":"scissors"} /*
    Ответ сервера содержит итог игры, и оставшиеся баллы
    Пример ответа:                             */ {"Win_userId_point_userId:": 100, "ntfrId:": 83} /*
    В случае когда один игрок проиграет все баллы:
    Пример ответа:                                           */ {"UserId": "win", "ntfId": "lost"} /*


При обращении на эндпоинт /battles_info, сервер ожидает один аргумент токен матча
    Пример запроса к серверу:                */ {"token_match":"123f548238e2b8c4b6c57fab4c306d6b"} /*
    В ответ сервер отдаст информацию об ID-игроков, количестве баллов каждого игрока, количестве сделанных ходов.
    Пример ответа сервера:
       */{"userId": "10", "ntfrId": "10", "point_UserId": 100, "point_ntfrId": 83, "count_step": 1}/*


